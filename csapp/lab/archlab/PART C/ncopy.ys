#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
# %ebx        %ecx        %edx   r8->esi r9->edi
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-4 ,%rdx
	andq %rdx,%rdx		# (len-4) < 0?
	jl less4		

Loop:	
	mrmovq (%rdi),%r8 # get val from src
	mrmovq 8(%rdi),%r9
	rmmovq %r8,(%rsi)  #src->dest
	andq %r8, %r8		# val <= 0?
	jle Npos1		# if so, goto Npos:
	iaddq $1,%rax	# count++
Npos1:	
	rmmovq %r9,8(%rsi)
	andq %r9,%r9
	jle Npos2
	iaddq $1,%rax
Npos2:
	mrmovq 16(%rdi),%r8
	mrmovq 24(%rdi),%r9
	rmmovq %r8, 16(%rsi)
	andq %r8,%r8
	jle Npos3
	iaddq $1,%rax
Npos3:
	rmmovq %r9,24(%rsi)
	andq %r9,%r9
	jle next
	iaddq $1,%rax
next:
	iaddq $32,%rdi	   # src+4
	iaddq $32,%rsi	   # dst+4
	iaddq $-4,%rdx     # len-4 
	jge Loop	

less4:
	iaddq $4,%rdx      #back to init
	iaddq $-1,%rdx
	jl Done
	mrmovq (%rdi),%r8 # get val from src
	mrmovq 8(%rdi),%r9
	rmmovq %r8,(%rsi)  #src->dest
	andq %r8, %r8		# val <= 0?
	jle LNpos1
	iaddq $1,%rax
LNpos1:
	iaddq $-1,%rdx
	jl Done
	rmmovq %r9,8(%rsi)
	andq %r9,%r9
	jle LNpos2
	iaddq $1,%rax
LNpos2:
	iaddq $-1,%rdx
	jl Done
	mrmovq 16(%rdi),%r8
	rmmovq %r8, 16(%rsi)
	andq %r8,%r8
	jle Done
	iaddq $1,%rax
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
